#!/usr/bin/env bash
# vim: ft=sh tw=80

declare help="
Orchestrator script for Deb-building development images.

Usage:
  orchestrator test
  orchestrator push
  orchestrator build
  orchestrator update-versions
  orchestrator --version
  orchestrator -h | --help

Options:
  -h --help                 Show this screen.
  --version                 Show versions.
"

declare version="
Version: 1.0.0.
Licensed under the MIT terms.
"

declare ARCH
ARCH="$(uname -m)"
declare VERSIONS="${VERSIONS:-versions/$ARCH/*}"

build() {
  echo "Building for architecture: $ARCH"
  echo "Will build versions: $VERSIONS"

  for version in $VERSIONS; do
    echo "Building version $version"
    ( # shellcheck source=versions/x86_64/debian-unstable/options
    source "$version"/options
    for tag in "${TAGS[@]}"; do
      docker build -t "$tag" "$version"
    done
    )
  done
}

run_tests() {
  echo "Tests running for $ARCH:"
  declare -a test_files
  for file in $VERSIONS; do
    source "$file/options"
    local tag
    tag="${TAGS[0]}"
    tag="${tag//:/-}"
    tag="${tag//\//_}"
    test_files+=("tests/test_${tag}.bats")
  done
  bats "${test_files[@]}"
}

push() {
  [[ "$NO_PUSH" ]] && return 0

  for version in $VERSIONS; do
    echo "Pushing version $version"
    ( # shellcheck source=versions/x86_64/debian-unstable/options
    source "$version"/options
    for tag in "${TAGS[@]}"; do
      if docker history "$tag" &> /dev/null; then
        docker push "$tag"
      fi
    done
    )
  done
}

update_versions() {
  bash bin/update-versions.bash run
}

version() {
  echo "$version"
}

help() {
  echo "$help"
}

main() {
  set -eo pipefail; [[ "$TRACE" ]] && set -x
  declare cmd="$1"
  case "$cmd" in
    test)                 shift; run_tests "$@";;
    build)                shift; build "$@";;
    push)                 shift; push "$@";;
    update-versions)      shift; update_versions;;
    -h|--help)            shift; help "$@";;
    --version)            shift; version;;
    *)                    help "$@";;
  esac
}

main "$@"
